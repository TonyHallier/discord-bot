const { SlashCommandBuilder, MessageFlags } = require('discord.js');
const { ownerId } = require('../config.json'); // Assurez-vous que le 'ownerId' est d√©fini dans votre config

module.exports = {
    data: new SlashCommandBuilder()
        .setName('ping')
        .setDescription('üèì Affiche la latence du bot.')
        .setDefaultMemberPermissions(0), // Emp√™che l'acc√®s aux autres membres
    async execute(interaction) {
        // V√©rifier si l'utilisateur est le propri√©taire
        if (interaction.user.id !== ownerId) {
            return interaction.reply({
                content: '‚õî Cette commande est r√©serv√©e au propri√©taire du bot.',
                flags: MessageFlags.Ephemeral, // R√©ponse priv√©e
            });
        }

        // Mettre en attente la r√©ponse pendant que l'on calcule les latences
        const start = Date.now();  // Note l'heure √† laquelle l'interaction a √©t√© re√ßue
        await interaction.deferReply();

        // Calcul de la latence du bot et de l'API Discord
        const botLatency = Date.now() - start;  // Calcul de la latence du bot
        const apiLatency = Math.round(interaction.client.ws.ping); // Latence de l'API Discord (ws.ping)

        // Envoi de la r√©ponse une fois le calcul effectu√©
        await interaction.followUp({
            content: `üèì Pong! Latence du bot : **${botLatency}ms**\nLatence de l'API Discord : **${apiLatency}ms**`,
            flags: MessageFlags.Ephemeral, // R√©ponse priv√©e
        });
    }
};
